// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoScreen renders correctly according to the snapshot 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#F6F6F6",
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#005A9C",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "padding": 15,
      }
    }
  >
    <Text
      style={
        {
          "color": "#FFFFFF",
          "fontSize": 24,
        }
      }
    >
      Todo List
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      role="RecipesLoginButton"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "#FFFFFF",
              "fontSize": 24,
            },
            undefined,
            {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        î¯²
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "marginHorizontal": 10,
        "marginVertical": 16,
      }
    }
  >
    <View
      style={
        {
          "padding": 5,
        }
      }
    >
      <View
        style={{}}
      >
        <View
          pointerEvents="none"
          style={
            [
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 6,
              },
              {
                "top": 0,
              },
              {
                "backgroundColor": "rgba(255, 251, 254, 1)",
                "borderColor": "rgba(121, 116, 126, 1)",
                "borderRadius": 8,
                "borderWidth": 1,
              },
              undefined,
            ]
          }
          testID="text-input-outline"
        />
        <View
          style={
            [
              {
                "flexGrow": 1,
                "paddingBottom": 0,
              },
              {
                "minHeight": 56,
                "paddingTop": 0,
              },
            ]
          }
        >
          <TextInput
            cursorColor="rgba(103, 80, 164, 1)"
            editable={true}
            maxFontSizeMultiplier={1.5}
            multiline={false}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            onLayout={[Function]}
            onSubmitEditing={[Function]}
            placeholder="Add a Todo"
            placeholderTextColor="rgba(73, 69, 79, 1)"
            selectionColor="rgba(103, 80, 164, 1)"
            style={
              [
                {
                  "flexGrow": 1,
                  "margin": 0,
                },
                {
                  "height": 56,
                },
                {
                  "paddingBottom": 0,
                  "paddingTop": 0,
                },
                {
                  "color": "rgba(28, 27, 31, 1)",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": undefined,
                  "letterSpacing": 0.15,
                  "lineHeight": undefined,
                  "minWidth": 65,
                  "paddingHorizontal": 16,
                  "textAlign": "left",
                  "textAlignVertical": "center",
                },
                false,
                [
                  {},
                ],
                undefined,
              ]
            }
            testID="text-input-outlined"
            underlineColorAndroid="transparent"
            value=""
          />
        </View>
      </View>
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#005A9C",
            "borderRadius": 8,
            "marginTop": 12,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="AddTodoButton-container-outer-layer"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "#005A9C",
              "borderColor": "transparent",
              "borderRadius": 8,
              "borderStyle": "solid",
              "borderWidth": 0,
              "flex": undefined,
              "minWidth": 64,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "shadowRadius": 0,
            }
          }
          testID="AddTodoButton-container"
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                {
                  "borderRadius": 8,
                },
              ]
            }
            testID="AddTodoButton"
          >
            <View
              style={
                [
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  [
                    {
                      "textAlign": "left",
                    },
                    {
                      "color": "rgba(28, 27, 31, 1)",
                      "writingDirection": "ltr",
                    },
                    [
                      {
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      [
                        {
                          "marginHorizontal": 16,
                          "marginVertical": 9,
                          "textAlign": "center",
                        },
                        false,
                        {
                          "marginHorizontal": 24,
                          "marginVertical": 10,
                        },
                        undefined,
                        {
                          "textTransform": "uppercase",
                        },
                        {
                          "color": "rgba(255, 255, 255, 1)",
                          "fontFamily": "System",
                          "fontSize": 14,
                          "fontWeight": "500",
                          "letterSpacing": 0.1,
                          "lineHeight": 20,
                        },
                        {
                          "fontSize": 18,
                        },
                      ],
                    ],
                  ]
                }
                testID="AddTodoButton-text"
              >
                Add Todo
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "marginVertical": 15,
        "paddingHorizontal": 15,
      }
    }
  >
    <RCTScrollView
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      stickyHeaderIndices={[]}
      style={
        {
          "width": "100%",
        }
      }
      viewabilityConfigCallbackPairs={[]}
    >
      <View />
    </RCTScrollView>
  </View>
</View>
`;
